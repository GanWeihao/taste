<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.taste.mapper.ArticleCommentMapper" >
  <resultMap id="BaseResultMap" type="com.project.taste.model.ArticleComment" >
    <constructor >
      <idArg column="ARTICLE_COMMENT_ID" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ARTICLE_COMMENT_TEXT" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ARTICLE_COMMENT_TIME" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="ARTICLE_COMMENT_USER_ID" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ARTICLE_COMMENT_ARTICLE_ID" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ARTICLE_COMMENT_TOUSER_ID" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ARTICLE_COMMENT_STATUS" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    ARTICLE_COMMENT_ID, ARTICLE_COMMENT_TEXT, ARTICLE_COMMENT_TIME, ARTICLE_COMMENT_USER_ID, 
    ARTICLE_COMMENT_ARTICLE_ID, ARTICLE_COMMENT_TOUSER_ID, ARTICLE_COMMENT_STATUS
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from article_comment
    where ARTICLE_COMMENT_ID = #{articleCommentId,jdbcType=VARCHAR}
  </select>
  <!--删除文章评论-->
  <update id="deleteArticleComment" parameterType="java.lang.String">
    update article_comment
    set ARTICLE_COMMENT_STATUS=1
    where ARTICLE_COMMENT_ID=#{articleCommentId,jdbcType=VARCHAR}
  </update>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from article_comment
    where ARTICLE_COMMENT_ID = #{articleCommentId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.project.taste.model.ArticleComment" >
    insert into article_comment (ARTICLE_COMMENT_ID, ARTICLE_COMMENT_TEXT, 
      ARTICLE_COMMENT_TIME, ARTICLE_COMMENT_USER_ID, 
      ARTICLE_COMMENT_ARTICLE_ID, ARTICLE_COMMENT_TOUSER_ID, 
      ARTICLE_COMMENT_STATUS)
    values (#{articleCommentId,jdbcType=VARCHAR}, #{articleCommentText,jdbcType=VARCHAR}, 
      #{articleCommentTime,jdbcType=TIMESTAMP}, #{articleCommentUserId,jdbcType=VARCHAR}, 
      #{articleCommentArticleId,jdbcType=VARCHAR}, #{articleCommentTouserId,jdbcType=VARCHAR}, 
      #{articleCommentStatus,jdbcType=INTEGER})
  </insert>
  <!--添加文章评论-->
  <insert id="insertSelective" parameterType="com.project.taste.model.ArticleComment" >
    insert into article_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="articleCommentId != null" >
        ARTICLE_COMMENT_ID,
      </if>
      <if test="articleCommentText != null" >
        ARTICLE_COMMENT_TEXT,
      </if>
      <if test="articleCommentTime != null" >
        ARTICLE_COMMENT_TIME,
      </if>
      <if test="articleCommentUserId != null" >
        ARTICLE_COMMENT_USER_ID,
      </if>
      <if test="articleCommentArticleId != null" >
        ARTICLE_COMMENT_ARTICLE_ID,
      </if>
      <if test="articleCommentTouserId != null" >
        ARTICLE_COMMENT_TOUSER_ID,
      </if>
      <if test="articleCommentStatus != null" >
        ARTICLE_COMMENT_STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="articleCommentId != null" >
        #{articleCommentId,jdbcType=VARCHAR},
      </if>
      <if test="articleCommentText != null" >
        #{articleCommentText,jdbcType=VARCHAR},
      </if>
      <if test="articleCommentTime != null" >
        #{articleCommentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleCommentUserId != null" >
        #{articleCommentUserId,jdbcType=VARCHAR},
      </if>
      <if test="articleCommentArticleId != null" >
        #{articleCommentArticleId,jdbcType=VARCHAR},
      </if>
      <if test="articleCommentTouserId != null" >
        #{articleCommentTouserId,jdbcType=VARCHAR},
      </if>
      <if test="articleCommentStatus != null" >
        #{articleCommentStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.taste.model.ArticleComment" >
    update article_comment
    <set >
      <if test="articleCommentText != null" >
        ARTICLE_COMMENT_TEXT = #{articleCommentText,jdbcType=VARCHAR},
      </if>
      <if test="articleCommentTime != null" >
        ARTICLE_COMMENT_TIME = #{articleCommentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleCommentUserId != null" >
        ARTICLE_COMMENT_USER_ID = #{articleCommentUserId,jdbcType=VARCHAR},
      </if>
      <if test="articleCommentArticleId != null" >
        ARTICLE_COMMENT_ARTICLE_ID = #{articleCommentArticleId,jdbcType=VARCHAR},
      </if>
      <if test="articleCommentTouserId != null" >
        ARTICLE_COMMENT_TOUSER_ID = #{articleCommentTouserId,jdbcType=VARCHAR},
      </if>
      <if test="articleCommentStatus != null" >
        ARTICLE_COMMENT_STATUS = #{articleCommentStatus,jdbcType=INTEGER},
      </if>
    </set>
    where ARTICLE_COMMENT_ID = #{articleCommentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.taste.model.ArticleComment" >
    update article_comment
    set ARTICLE_COMMENT_TEXT = #{articleCommentText,jdbcType=VARCHAR},
      ARTICLE_COMMENT_TIME = #{articleCommentTime,jdbcType=TIMESTAMP},
      ARTICLE_COMMENT_USER_ID = #{articleCommentUserId,jdbcType=VARCHAR},
      ARTICLE_COMMENT_ARTICLE_ID = #{articleCommentArticleId,jdbcType=VARCHAR},
      ARTICLE_COMMENT_TOUSER_ID = #{articleCommentTouserId,jdbcType=VARCHAR},
      ARTICLE_COMMENT_STATUS = #{articleCommentStatus,jdbcType=INTEGER}
    where ARTICLE_COMMENT_ID = #{articleCommentId,jdbcType=VARCHAR}
  </update>
  <!--根据文章评论ID查询文章评论-->
  <select id="queryByIdComment"  parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from  article_comment
    where ARTICLE_COMMENT_ARTICLE_ID=#{articleCommentArticleId,jdbcType=VARCHAR}
    and ARTICLE_COMMENT_STATUS=0
  </select>
  <!--根据用户ID查询文章评论-->
  <select id="queryUserByIdComment" parameterType="java.lang.String"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from article_comment
    where ARTICLE_COMMENT_USER_ID=#{articleCommentUserId,jdbcType=VARCHAR}
    and ARTICLE_COMMENT_STATUS=0
  </select>
  <!--根据文章ID查询评论数量-->
  <select id="queryCommentNumber" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(ARTICLE_COMMENT_ARTICLE_ID)
    from  article_comment
    where ARTICLE_COMMENT_ARTICLE_ID=#{articleCommentArticleId,jdbcType=VARCHAR}
    and ARTICLE_COMMENT_STATUS=0
  </select>
</mapper>