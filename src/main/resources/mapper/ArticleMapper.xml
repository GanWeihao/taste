<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.taste.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.project.taste.model.Article">
        <constructor>
            <idArg column="ARTICLE_ID" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="ARTICLE_TITLE" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="ARTICLE_STATUS" jdbcType="INTEGER" javaType="java.lang.String"/>
            <arg column="ARTICLE_USER_ID" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="ARTICLE_CATEGORY_ID" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="ARTICLE_TIME" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    ARTICLE_ID, ARTICLE_TITLE, ARTICLE_STATUS, ARTICLE_USER_ID, ARTICLE_CATEGORY_ID,
    ARTICLE_TIME
  </sql>
    <!--查询所有文章（带分页）-->
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from article
        where ARTICLE_STATUS = 0
        order by ARTICLE_TIME desc
    </select>
    <!--根据类别ID查所有文章（带分页）-->
    <select id="selectByCategoryId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from article
        where ARTICLE_CATEGORY_ID = #{articleCategoryId,jdbcType=VARCHAR}
        and ARTICLE_STATUS = 0
        order by ARTICLE_TIME desc
    </select>
    <!--根据文章ID查询文章-->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from article
        where ARTICLE_ID = #{articleId,jdbcType=VARCHAR}
    </select>
    <!--根据ID删除文章-->
    <update id="deleteByArticleId" parameterType="java.lang.String">
        update article
        set ARTICLE_STATUS=1
        where ARTICLE_ID = #{articleId,jdbcType=VARCHAR}
    </update>
    <!--添加文章-->
    <insert id="insertSelective" parameterType="com.project.taste.model.Article">
        insert into article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="articleId != null">
                ARTICLE_ID,
            </if>
            <if test="articleTitle != null">
                ARTICLE_TITLE,
            </if>
            <if test="articleStatus != null">
                ARTICLE_STATUS,
            </if>
            <if test="articleUserId != null">
                ARTICLE_USER_ID,
            </if>
            <if test="articleCategoryId != null">
                ARTICLE_CATEGORY_ID,
            </if>
            <if test="articleTime != null">
                ARTICLE_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="articleId != null">
                #{articleId,jdbcType=VARCHAR},
            </if>
            <if test="articleTitle != null">
                #{articleTitle,jdbcType=VARCHAR},
            </if>
            <if test="articleStatus != null">
                #{articleStatus,jdbcType=INTEGER},
            </if>
            <if test="articleUserId != null">
                #{articleUserId,jdbcType=VARCHAR},
            </if>
            <if test="articleCategoryId != null">
                #{articleCategoryId,jdbcType=VARCHAR},
            </if>
            <if test="articleTime != null">
                #{articleTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from article
    where ARTICLE_ID = #{articleId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.project.taste.model.Article">
    insert into article (ARTICLE_ID, ARTICLE_TITLE, ARTICLE_STATUS, 
      ARTICLE_USER_ID, ARTICLE_CATEGORY_ID,
      ARTICLE_TIME)
    values (#{articleId,jdbcType=VARCHAR}, #{articleTitle,jdbcType=VARCHAR}, #{articleStatus,jdbcType=INTEGER},
      #{articleUserId,jdbcType=VARCHAR}, #{articleCategoryId,jdbcType=VARCHAR},
      #{articleTime,jdbcType=TIMESTAMP})
  </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.project.taste.model.Article">
        update article
        <set>
            <if test="articleTitle != null">
                ARTICLE_TITLE = #{articleTitle,jdbcType=VARCHAR},
            </if>
            <if test="articleStatus != null">
                ARTICLE_STATUS = #{articleStatus,jdbcType=INTEGER},
            </if>
            <if test="articleUserId != null">
                ARTICLE_USER_ID = #{articleUserId,jdbcType=VARCHAR},
            </if>
            <if test="articleCategoryId != null">
                ARTICLE_CATEGORY_ID = #{articleCategoryId,jdbcType=VARCHAR},
            </if>
            <if test="articleTime != null">
                ARTICLE_TIME = #{articleTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where ARTICLE_ID = #{articleId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.project.taste.model.Article">
    update article
    set ARTICLE_TITLE = #{articleTitle,jdbcType=VARCHAR},
      ARTICLE_STATUS = #{articleStatus,jdbcType=INTEGER},
      ARTICLE_USER_ID = #{articleUserId,jdbcType=VARCHAR},
      ARTICLE_CATEGORY_ID = #{articleCategoryId,jdbcType=VARCHAR},
      ARTICLE_TIME = #{articleTime,jdbcType=TIMESTAMP}
    where ARTICLE_ID = #{articleId,jdbcType=VARCHAR}
  </update>
</mapper>